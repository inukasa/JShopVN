@model JunShopVN.Models.User
@using JunShopVN.Models
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EditProfile</title>
    <link href="~/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/small-business.css" rel="stylesheet" />
</head>
<body>
    @if (Session["username"] == null)
    {
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
            <div class="container">
                <a class="navbar-brand" href="@Url.Action("Index", "Customer")"><img class="img-logo" src="~/Images/Asset-5.png" /></a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarResponsive">
                    <ul class="navbar-nav ml-auto">
                        <li class="nav-item active">
                            <a class="nav-link" href="@Url.Action("Index", "Customer")">
                                Trang chủ
                                <span class="sr-only">(current)</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("Login", "Login")">Đăng nhập</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    }
    else
    {
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
            <div class="container">
                <a class="navbar-brand" href="@Url.Action("Index", "Customer")"><img class="img-logo" src="~/Images/Asset-5.png" /></a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarResponsive">
                    <ul class="navbar-nav ml-auto">
                        <li class="nav-item active">
                            <a class="nav-link" href="@Url.Action("Index", "Customer")">
                                Home
                                <span class="sr-only">(current)</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            @{
                                string username = Session["username"].ToString();
                                using (JShopVNEntities db = new JShopVNEntities())
                                {
                                    <a class="nav-link" href="@Url.Action("viewProfile", "Login", new { id = db.Users.Where(y => y.accid == db.Accounts.Where(x => x.username.Equals(username)).FirstOrDefault().id).FirstOrDefault().id })">Thông tin cá nhân</a>
                                }
                            }
                        </li>
                        <li class="nav-item">
                            @{
                                using (JShopVNEntities db = new JShopVNEntities())
                                {
                                    <a class="nav-link" href="@Url.Action("ListCart", "Customer", new { id = db.Users.Where(y => y.accid == db.Accounts.Where(x => x.username.Equals(username)).FirstOrDefault().id).FirstOrDefault().id })">Xem giỏ hàng<span class="sr-only">(current)</span></a>
                                }
                            }
                        </li>
                        <li class="nav-item">
                            @{
                                using (JShopVNEntities db = new JShopVNEntities())
                                {
                                    <a class="nav-link" href="@Url.Action("ListOrder", "Customer", new { id = db.Users.Where(y => y.accid == db.Accounts.Where(x => x.username.Equals(username)).FirstOrDefault().id).FirstOrDefault().id })">Xem đơn hàng</a>
                                }
                            }
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("Logout", "Login")">Log Out</a>
                        </li>
                        <li class="nav-item">

                            @{
                                using (JShopVNEntities db = new JShopVNEntities())
                                {
                                    <span class="nav-link">Tài khoản còn dư: @String.Format("{0:n0}", db.Users.Where(x => x.accid == db.Accounts.Where(y => y.username.Equals(username)).FirstOrDefault().id).FirstOrDefault().balance) VND</span>
                                }
                            }
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    }
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>User</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)

            @Html.HiddenFor(model => model.accid)

            <div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.facebook, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.facebook, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.facebook, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.balance)

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Sửa thông tin" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
